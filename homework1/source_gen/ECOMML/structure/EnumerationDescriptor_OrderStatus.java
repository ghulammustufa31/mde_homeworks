package ECOMML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_OrderStatus extends EnumerationDescriptorBase {

  public EnumerationDescriptor_OrderStatus() {
    super(0xec1bc844bf74e86L, 0x9b15a8f6767d0e4eL, 0x15d9852c2ef0a066L, "OrderStatus", "r:574a9064-41ef-49c4-a078-66bb8bceb412(ECOMML.structure)/1574435969555275878");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_PAID_0 = new EnumerationDescriptor.MemberDescriptor("PAID", "PAID", 0x15d9852c2ef0a067L, "r:574a9064-41ef-49c4-a078-66bb8bceb412(ECOMML.structure)/1574435969555275879");
  private final EnumerationDescriptor.MemberDescriptor myMember_COMMITED_0 = new EnumerationDescriptor.MemberDescriptor("COMMITED", "COMMITED", 0x15d9852c2ef0a068L, "r:574a9064-41ef-49c4-a078-66bb8bceb412(ECOMML.structure)/1574435969555275880");
  private final EnumerationDescriptor.MemberDescriptor myMember_UNPAID_0 = new EnumerationDescriptor.MemberDescriptor("UNPAID", "UNPAID", 0x4c007588fdc61c9eL, "r:574a9064-41ef-49c4-a078-66bb8bceb412(ECOMML.structure)/5476506378116144286");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0xec1bc844bf74e86L, 0x9b15a8f6767d0e4eL, 0x15d9852c2ef0a066L, 0x15d9852c2ef0a067L, 0x15d9852c2ef0a068L, 0x4c007588fdc61c9eL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_PAID_0, myMember_COMMITED_0, myMember_UNPAID_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "PAID":
        return myMember_PAID_0;
      case "COMMITED":
        return myMember_COMMITED_0;
      case "UNPAID":
        return myMember_UNPAID_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
